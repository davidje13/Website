#!/usr/sbin/nft -f

flush ruleset

table inet nat {
	chain prerouting {
		type nat hook prerouting priority dstnat; policy accept;
		tcp dport 80 redirect to :8000
		tcp dport 443 redirect to :8443
	}
}

table inet filter {
	#set blocklist4 {
	#	# https://wiki.archlinux.org/title/nftables#Dynamic_blackhole
	#	type ipv4_addr;
	#	flags dynamic, timeout;
	#	timeout 15s;
	#	size 65536;
	#}

	chain input {
		type filter hook input priority 0; policy drop;
		# Loopback
		iif lo accept

		# Connection Tracking
		ct state established,related counter accept
		ct state invalid counter drop

		# Rate limiting
		#meta protocol ip meter rate4 size 65536 { ip saddr timeout 10s limit rate over 5/second burst 10 } \
		#	counter add @blocklist4 { ip saddr } drop
		#ip saddr @blocklist4 counter drop

		# Available Services
		tcp dport 8443 counter accept
		tcp dport 8000 counter accept

		#tcp dport 22 meta protocol ip meter sshrate4 size 65536 { ip saddr timeout 60s limit rate 10/minute } counter accept
		tcp dport 22 counter accept

		# DHCP
		udp dport 68 meta protocol ip counter accept
		udp dport 546 meta protocol ip6 counter accept

		# ICMP
		icmp type { echo-request, router-advertisement } counter accept
		icmpv6 type { echo-request, nd-neighbor-advert, nd-neighbor-solicit, nd-router-advert } counter accept

		counter log
	}

	chain forward {
		type filter hook forward priority 0; policy drop;
	}

	chain output {
		type filter hook output priority 0; policy accept;

		## Loopback
		#oif lo accept

		## Connection Tracking
		#ct state established,related accept
	}
}
