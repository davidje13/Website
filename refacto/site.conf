upstream refacto_backend {
	server 127.0.0.1:4080 max_conns=64;
	server 127.0.0.1:4081 max_conns=64;
	keepalive 16;
}

upstream refacto_backend_ws {
	hash $request_uri consistent;

	server 127.0.0.1:4080 max_conns=1024;
	server 127.0.0.1:4081 max_conns=1024;
}

map $http_upgrade $connection_upgrade {
	default upgrade;
	'' close;
}

server {
	server_name retro.((DOMAIN));
	listen 8443 ssl http2;
	listen [::]:8443 ssl http2;
	include /etc/nginx/sites-available/shared-ssl.inc;

	client_header_timeout 5s;
	client_body_timeout 5s;
	client_max_body_size 614400;

	access_log off;
	error_log off;

	merge_slashes off;

	location / {
		proxy_pass http://refacto_backend;
		proxy_http_version 1.1;
		proxy_redirect off;
		proxy_buffering off;
		proxy_connect_timeout 5s;
		proxy_read_timeout 10s;

		proxy_set_header X-Forwarded-For $remote_addr;
		proxy_set_header X-Forwarded-Host $host:$server_port;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-Port $server_port;
		proxy_set_header X-Forwarded-Proto https;
	}

	location /api/retros/ {
		proxy_pass http://refacto_backend_ws;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		proxy_redirect off;
		proxy_buffering off;
		proxy_connect_timeout 5s;
		proxy_read_timeout 60s;

		proxy_set_header X-Forwarded-For $remote_addr;
		proxy_set_header X-Forwarded-Host $host:$server_port;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-Port $server_port;
		proxy_set_header X-Forwarded-Proto https;
	}
}

server {
	server_name retros.((DOMAIN)) refacto.((DOMAIN));
	listen 8443 ssl http2;
	listen [::]:8443 ssl http2;

	keepalive_requests 1;
	keepalive_timeout 0s;

	client_header_timeout 5s;
	client_body_timeout 5s;
	client_max_body_size 1;

	location / {
		access_log off;
		expires max;
		return 301 https://retro.((DOMAIN))$request_uri;
	}
}
