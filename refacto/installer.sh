#!/bin/sh
set -ex

BASEDIR="$(dirname "$0")";
. "$BASEDIR/../common/utils.sh";
SERVICE_PORTS="4080 4081";

# Disable existing update mechanism (if present) to avoid conflicting actions

sudo systemctl disable --now refacto-updater.timer || true;

# Check / preserve secrets

if ! [ -f "$BASEDIR/../env/refacto.env" ]; then
  if ! [ -f /var/www/refacto/secrets.env ]; then
    set +x;
    echo "Must populate env/refacto.env" >&2;
    exit 1;
  fi;
  # Preserve existing secrets if re-installing without new secrets
  sudo cp /var/www/refacto/secrets.env "$BASEDIR/../env/refacto.env";
fi;
sudo chmod 0400 "$BASEDIR/../env/refacto.env";

# Is this the first install / a fresh install

LOAD_BACKUP=false;
if ! [ -f /etc/nginx/sites-available/refacto ]; then
  sudo rm -r /var/www/refacto || true;
  LOAD_BACKUP=true;

  # Shutdown existing services if found

  for PORT in $SERVICE_PORTS; do
    sudo systemctl stop "refacto$PORT.service" || true;
  done;
fi;

# Make users

if ! id -u refacto-updater >/dev/null 2>&1; then
  sudo useradd --create-home --user-group refacto-updater;
fi;
if ! id -u refacto-runner >/dev/null 2>&1; then
  sudo useradd --system --user-group refacto-runner;
fi;

# Load dependencies

sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
  nodejs \
  mongodb-org-server \
  mongodb-database-tools \
  jq \
  build-essential;

sudo systemctl enable --now mongod;

#sudo apt-get install mongodb-mongosh; # debug tool: connect to DB manually

# Install boilerplate

sudo mkdir -p /var/www/refacto/update;
sudo chown -R refacto-updater:refacto-updater /var/www/refacto/update;

sudo mv "$BASEDIR/../env/refacto.env" /var/www/refacto/secrets.env;
sudo chown root:refacto-runner /var/www/refacto/secrets.env;
sudo chmod 0400 /var/www/refacto/secrets.env;

sudo cp "$BASEDIR/update.sh" /var/www/refacto/update.sh;
sudo chown root:refacto-updater /var/www/refacto/update.sh;
sudo chmod 0544 /var/www/refacto/update.sh;

sudo mkdir -p /var/log/refacto;
sudo chown -R refacto-runner:adm /var/log/refacto;
sudo chmod 0750 /var/log/refacto;

# Update to first version

sudo /var/www/refacto/update.sh --force --nostart;

# Import data

if [ "$LOAD_BACKUP" = "true" ]; then
  if [ -z "$REFACTO_DATA_FILE" ]; then
    set +x;
    echo;
    echo;
    echo "Enter filename to import refacto data from, or leave blank for no import:";
    echo "(this should be a .tar.gz file generated by the ./backup.sh script)";
    read REFACTO_DATA_FILE;
    set -x;
  fi;
  if [ -n "$REFACTO_DATA_FILE" ] && [ "$REFACTO_DATA_FILE" != "none" ]; then
    "$BASEDIR/restore.sh" "$REFACTO_DATA_FILE";
  fi;
fi;

# Create and start services

for PORT in $SERVICE_PORTS; do
  NAME="refacto$PORT.service";
  LOGFILE="/var/log/refacto/refacto-$PORT.log"
  sudo touch -a "$LOGFILE";
  sudo chmod 0640 "$LOGFILE";
  sudo chown refacto-runner adm "$LOGFILE";
  sed -e "s/((PORT))/$PORT/g" -e "s~((LOGFILE))~$LOGFILE~g" "$BASEDIR/refacto.service" | \
    sudo tee "/lib/systemd/system/$NAME" > /dev/null;
  sudo chmod 0644 "/lib/systemd/system/$NAME";
  sudo systemctl enable "$NAME";
  sudo systemctl restart "$NAME";
done;

# Configure auto-update

sudo cp "$BASEDIR/refacto-updater.service" "$BASEDIR/refacto-updater.timer" /lib/systemd/system/;
sudo chmod 0644 /lib/systemd/system/refacto-updater.service /lib/systemd/system/refacto-updater.timer;
sudo systemctl enable refacto-updater.timer; # no --now (do not start updater while we are still installing)

# Configure rotation of logs

install_config "$BASEDIR/logrotate/refacto" /etc/logrotate.d || true;

sudo cp "$BASEDIR/clean-mongo-log.sh" /var/www/refacto/clean-mongo-log.sh;
sudo chmod 0755 /var/www/refacto/clean-mongo-log.sh;
sudo cp "$BASEDIR/clean-mongo-log.service" "$BASEDIR/clean-mongo-log.timer" /lib/systemd/system/;
sudo chmod 0644 /lib/systemd/system/clean-mongo-log.service /lib/systemd/system/clean-mongo-log.timer;
sudo systemctl enable --now clean-mongo-log.timer;

# Add NGINX config

sed "s/((DOMAIN))/$DOMAIN/g" "$BASEDIR/site.conf" | \
  sudo tee /etc/nginx/sites-available/refacto > /dev/null;

sudo ln -s /etc/nginx/sites-available/refacto /etc/nginx/sites-ready/refacto;
